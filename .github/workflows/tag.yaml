name: Tag version

on:
  workflow_dispatch:

jobs:
  bump-version:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up jq
        uses: dcarbone/install-jq-action@v3

      - name: Get current date and time for version
        id: version_info
        run: |
          TIMESTAMP=$(date "+%y.%m.%d+b%H%M")
          echo "NEW_VERSION=$TIMESTAMP" >> $GITHUB_OUTPUT

      - name: Bump version in package.json files
        run: |
          find . -maxdepth 1 -type d -name "[!.]*" -exec bash -c '
            if [ -f "$1/package.json" ]; then
              cd "$1"
              echo "Updating version in $1/package.json"
              NEW_VERSION="${{ steps.version_info.outputs.NEW_VERSION }}"
              jq --arg newVersion "$NEW_VERSION" '\''.version = $newVersion'\'' "package.json" > "/tmp/package.json"
              mv "/tmp/package.json" "package.json"
            fi
          ' _ {} \;

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Bump version to ${{ steps.version_info.outputs.NEW_VERSION }}"
          file_pattern: '*/package.json'

      - name: Tag commit
        uses: actions/github-script@v7
        with:
          script: |
            const newVersion = "${{ steps.version_info.outputs.NEW_VERSION }}";
            const tag_name = `v${newVersion}`;
            try {
              await github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `refs/tags/${tag_name}`,
                sha: context.sha
              });
              console.log(`Successfully created tag: ${tag_name}`);
            } catch (error) {
              console.error('Failed to create tag:', error);
            }

      - name: Trigger build
        run: gh workflow run build.yaml --ref "v${{ steps.version_info.outputs.NEW_VERSION }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}